apiVersion: v1
items:
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-10-19T08:31:06Z"
    generation: 1
    labels:
      app: adservice
      pod-template-hash: 77d5cd745d
    name: adservice-77d5cd745d
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: adservice
      uid: a749943e-e039-4280-81ba-fc2b38b7b5db
    resourceVersion: "222266"
    uid: 189df358-7f7d-44bf-bd3e-8235585bb1b6
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: adservice
        pod-template-hash: 77d5cd745d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: adservice
          pod-template-hash: 77d5cd745d
      spec:
        containers:
        - env:
          - name: PORT
            value: "9555"
          - name: DISABLE_STATS
            value: "1"
          - name: DISABLE_TRACING
            value: "1"
          image: gcr.io/google-samples/microservices-demo/adservice:v0.3.8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:9555
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 9555
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:9555
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 180Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-10-19T08:31:04Z"
    generation: 1
    labels:
      app: cartservice
      pod-template-hash: 74f56fd4b
    name: cartservice-74f56fd4b
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cartservice
      uid: f9096ae1-94d4-4859-b327-4c763b0eaeb3
    resourceVersion: "222222"
    uid: 14d2c4f8-a647-42fb-a344-bd9db2187c0d
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: cartservice
        pod-template-hash: 74f56fd4b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: cartservice
          pod-template-hash: 74f56fd4b
      spec:
        containers:
        - env:
          - name: REDIS_ADDR
            value: redis-cart:6379
          image: gcr.io/google-samples/microservices-demo/cartservice:v0.3.8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:7070
              - -rpc-timeout=5s
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7070
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:7070
              - -rpc-timeout=5s
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-10-19T08:31:03Z"
    generation: 1
    labels:
      app: checkoutservice
      pod-template-hash: 69c8ff664b
    name: checkoutservice-69c8ff664b
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: checkoutservice
      uid: d78cdaca-72bb-4863-865e-562e097158fa
    resourceVersion: "222141"
    uid: 65ce6f11-326e-4225-9054-a61e14c4fb0d
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: checkoutservice
        pod-template-hash: 69c8ff664b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: checkoutservice
          pod-template-hash: 69c8ff664b
      spec:
        containers:
        - env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: PAYMENT_SERVICE_ADDR
            value: paymentservice:50051
          - name: EMAIL_SERVICE_ADDR
            value: emailservice:5000
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: DISABLE_STATS
            value: "1"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.3.8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:5050
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 5050
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:5050
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-10-19T08:31:04Z"
    generation: 1
    labels:
      app: currencyservice
      pod-template-hash: 77654bbbdd
    name: currencyservice-77654bbbdd
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: currencyservice
      uid: 3b32ead4-808d-4b5a-bfee-941649ecec41
    resourceVersion: "222169"
    uid: dcea59a2-96b7-4f61-a84e-2738254f1b9a
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: currencyservice
        pod-template-hash: 77654bbbdd
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: currencyservice
          pod-template-hash: 77654bbbdd
      spec:
        containers:
        - env:
          - name: PORT
            value: "7000"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          - name: DISABLE_DEBUGGER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/currencyservice:v0.3.8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:7000
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7000
            name: grpc
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:7000
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-10-19T08:31:03Z"
    generation: 1
    labels:
      app: emailservice
      pod-template-hash: 54c7c5d9d
    name: emailservice-54c7c5d9d
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: emailservice
      uid: c9265cf5-0d9c-41c2-a978-8b0852c3ad1f
    resourceVersion: "269726"
    uid: d8e772ca-0c60-44f7-a896-49f522988e3f
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: emailservice
        pod-template-hash: 54c7c5d9d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: emailservice
          pod-template-hash: 54c7c5d9d
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/emailservice:v0.3.8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-10-19T08:31:03Z"
    generation: 1
    labels:
      app: frontend
      pod-template-hash: 99684f7f8
    name: frontend-99684f7f8
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: frontend
      uid: d397f191-17bd-40f0-b583-fb3ee85a03c1
    resourceVersion: "72402"
    uid: b360e135-3794-4519-8b14-1da67f103547
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: frontend
        pod-template-hash: 99684f7f8
    template:
      metadata:
        annotations:
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: frontend
          pod-template-hash: 99684f7f8
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: RECOMMENDATION_SERVICE_ADDR
            value: recommendationservice:8080
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: CHECKOUT_SERVICE_ADDR
            value: checkoutservice:5050
          - name: AD_SERVICE_ADDR
            value: adservice:9555
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/frontend:v0.3.8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-liveness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-readiness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-10-19T08:31:04Z"
    generation: 2
    labels:
      app: loadgenerator
      pod-template-hash: 555fbdc87d
    name: loadgenerator-555fbdc87d
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: loadgenerator
      uid: 48c66e0e-a405-4160-9cb4-7cfc3e03c445
    resourceVersion: "76605"
    uid: 39bff772-60ad-41bc-8ace-dd2d24c02371
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: loadgenerator
        pod-template-hash: 555fbdc87d
    template:
      metadata:
        annotations:
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: loadgenerator
          pod-template-hash: 555fbdc87d
      spec:
        containers:
        - env:
          - name: FRONTEND_ADDR
            value: frontend:80
          - name: USERS
            value: "10"
          image: gcr.io/google-samples/microservices-demo/loadgenerator:v0.3.8
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 300m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/sh
          - -exc
          - |
            echo "Init container pinging frontend: ${FRONTEND_ADDR}..."
            STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
            if test $STATUSCODE -ne 200; then
                echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
                exit 1
            fi
          env:
          - name: FRONTEND_ADDR
            value: frontend:80
          image: busybox:latest
          imagePullPolicy: Always
          name: frontend-check
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 3
    fullyLabeledReplicas: 3
    observedGeneration: 2
    readyReplicas: 3
    replicas: 3
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-10-19T08:31:03Z"
    generation: 1
    labels:
      app: paymentservice
      pod-template-hash: bbcbdc6b6
    name: paymentservice-bbcbdc6b6
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: paymentservice
      uid: b1cd1359-8f2f-4ff8-88e1-4e7b350f601a
    resourceVersion: "222149"
    uid: 7b61f3d5-11e7-4e99-9f37-fad2dfa45676
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: paymentservice
        pod-template-hash: bbcbdc6b6
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: paymentservice
          pod-template-hash: bbcbdc6b6
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          - name: DISABLE_DEBUGGER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/paymentservice:v0.3.8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:50051
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:50051
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-10-19T08:31:04Z"
    generation: 1
    labels:
      app: productcatalogservice
      pod-template-hash: 68765d49b6
    name: productcatalogservice-68765d49b6
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: productcatalogservice
      uid: ed7bf2e2-fcf2-498d-a48d-1d1a8ee5eb23
    resourceVersion: "222084"
    uid: 5b3a8423-0aa9-4e05-bdfe-25fe87b13d4b
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: productcatalogservice
        pod-template-hash: 68765d49b6
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: productcatalogservice
          pod-template-hash: 68765d49b6
      spec:
        containers:
        - env:
          - name: PORT
            value: "3550"
          - name: DISABLE_STATS
            value: "1"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.3.8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:3550
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 3550
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:3550
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-10-19T08:31:03Z"
    generation: 1
    labels:
      app: recommendationservice
      pod-template-hash: 5f8c456796
    name: recommendationservice-5f8c456796
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: recommendationservice
      uid: 88356231-ca96-4e8b-9ce7-eb288dea858a
    resourceVersion: "269717"
    uid: 57fc96f4-fcfb-4361-a637-ad96a07dd3bb
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: recommendationservice
        pod-template-hash: 5f8c456796
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: recommendationservice
          pod-template-hash: 5f8c456796
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          - name: DISABLE_DEBUGGER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.3.8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 450Mi
            requests:
              cpu: 100m
              memory: 220Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-10-19T08:31:05Z"
    generation: 1
    labels:
      app: redis-cart
      pod-template-hash: 78746d49dc
    name: redis-cart-78746d49dc
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis-cart
      uid: 83798769-d71c-47aa-a46f-39c50021ee61
    resourceVersion: "72370"
    uid: d622fbab-37be-4932-a0b5-580f253b4949
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: redis-cart
        pod-template-hash: 78746d49dc
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: redis-cart
          pod-template-hash: 78746d49dc
      spec:
        containers:
        - image: redis:alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 125m
              memory: 256Mi
            requests:
              cpu: 70m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: redis-data
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-10-19T08:31:05Z"
    generation: 1
    labels:
      app: shippingservice
      pod-template-hash: 5bd985c46d
    name: shippingservice-5bd985c46d
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: shippingservice
      uid: eaead8a1-763d-4da3-a026-f2a11ca9990e
    resourceVersion: "222162"
    uid: 5ebedba8-eef4-426a-922e-fd875bb31994
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: shippingservice
        pod-template-hash: 5bd985c46d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: shippingservice
          pod-template-hash: 5bd985c46d
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_STATS
            value: "1"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/shippingservice:v0.3.8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:50051
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:50051
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
